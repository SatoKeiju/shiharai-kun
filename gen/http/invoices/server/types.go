// Code generated by goa v3.19.1, DO NOT EDIT.
//
// invoices HTTP server types
//
// Command:
// $ goa gen github.com/SatoKeiju/shiharai-kun/design

package server

import (
	invoices "github.com/SatoKeiju/shiharai-kun/gen/invoices"
)

// FetchListResponseBody is the type of the "invoices" service "fetch list"
// endpoint HTTP response body.
type FetchListResponseBody []*InvoiceResponse

// FetchListBadRequestResponseBody is the type of the "invoices" service "fetch
// list" endpoint HTTP response body for the "bad_request" error.
type FetchListBadRequestResponseBody struct {
	Message string `form:"message" json:"message" xml:"message"`
}

// FetchListInternalServerErrorResponseBody is the type of the "invoices"
// service "fetch list" endpoint HTTP response body for the
// "internal_server_error" error.
type FetchListInternalServerErrorResponseBody struct {
	Message string `form:"message" json:"message" xml:"message"`
}

// InvoiceResponse is used to define fields on response body types.
type InvoiceResponse struct {
	// 発行日
	IssueDate string `form:"issue_date" json:"issue_date" xml:"issue_date"`
	// 支払金額
	PaymentAmount int `form:"payment_amount" json:"payment_amount" xml:"payment_amount"`
	// 手数料
	Commission int `form:"commission" json:"commission" xml:"commission"`
	// 手数料率
	CommissionRate float64 `form:"commission_rate" json:"commission_rate" xml:"commission_rate"`
	// 消費税
	ConsumptionTax int `form:"consumption_tax" json:"consumption_tax" xml:"consumption_tax"`
	// 消費税率
	ConsumptionTaxRate float64 `form:"consumption_tax_rate" json:"consumption_tax_rate" xml:"consumption_tax_rate"`
	// 請求金額
	BillingAmount int `form:"billing_amount" json:"billing_amount" xml:"billing_amount"`
	// 支払期日
	PaymentDueDate string `form:"payment_due_date" json:"payment_due_date" xml:"payment_due_date"`
	// ステータス
	Status string `form:"status" json:"status" xml:"status"`
}

// NewFetchListResponseBody builds the HTTP response body from the result of
// the "fetch list" endpoint of the "invoices" service.
func NewFetchListResponseBody(res []*invoices.Invoice) FetchListResponseBody {
	body := make([]*InvoiceResponse, len(res))
	for i, val := range res {
		body[i] = marshalInvoicesInvoiceToInvoiceResponse(val)
	}
	return body
}

// NewFetchListBadRequestResponseBody builds the HTTP response body from the
// result of the "fetch list" endpoint of the "invoices" service.
func NewFetchListBadRequestResponseBody(res *invoices.ErrBadRequest) *FetchListBadRequestResponseBody {
	body := &FetchListBadRequestResponseBody{
		Message: res.Message,
	}
	return body
}

// NewFetchListInternalServerErrorResponseBody builds the HTTP response body
// from the result of the "fetch list" endpoint of the "invoices" service.
func NewFetchListInternalServerErrorResponseBody(res *invoices.ErrInternalServerError) *FetchListInternalServerErrorResponseBody {
	body := &FetchListInternalServerErrorResponseBody{
		Message: res.Message,
	}
	return body
}

// NewFetchListPayload builds a invoices service fetch list endpoint payload.
func NewFetchListPayload(userID string, fromDate string, toDate string) *invoices.FetchListPayload {
	v := &invoices.FetchListPayload{}
	v.UserID = userID
	v.FromDate = fromDate
	v.ToDate = toDate

	return v
}
