// Code generated by goa v3.19.1, DO NOT EDIT.
//
// invoices endpoints
//
// Command:
// $ goa gen github.com/SatoKeiju/shiharai-kun/design

package invoices

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "invoices" service endpoints.
type Endpoints struct {
	Fetch goa.Endpoint
}

// NewEndpoints wraps the methods of the "invoices" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Fetch: NewFetchEndpoint(s),
	}
}

// Use applies the given middleware to all the "invoices" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Fetch = m(e.Fetch)
}

// NewFetchEndpoint returns an endpoint function that calls the method "fetch"
// of service "invoices".
func NewFetchEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*FetchPayload)
		return s.Fetch(ctx, p)
	}
}
